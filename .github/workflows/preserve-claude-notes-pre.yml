name: claude-was-here Preserve git Notes (Pre-merge)

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  collect-claude-notes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to access all commits
          ref: ${{ github.head_ref }}  # Checkout the actual PR branch head
          
      - name: Fetch git notes
        run: |
          # Fetch default git notes if they exist
          echo "Attempting to fetch git notes..."
          git fetch origin refs/notes/commits:refs/notes/commits 2>/dev/null || echo "No git notes found in origin"
          
          # List all notes refs to see what's available
          echo "Available notes refs:"
          git for-each-ref refs/notes/ || echo "No notes refs found"
          
          # Show what notes we have
          echo "Checking for existing notes on recent commits..."
          git log --oneline --notes=commits -n 5 || echo "No notes found on recent commits"
          
          # Test if we can access notes for specific commits
          echo "Testing note access for specific commits..."
          git log --format="%H" -n 10 | while read commit; do
            if git notes show "$commit" 2>/dev/null; then
              echo "✅ Found notes for commit $commit"
            else
              echo "❌ No notes for commit $commit"
            fi
          done
          
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Get base and head commits
        id: commits
        run: |
          BASE_COMMIT=$(git merge-base HEAD origin/${{ github.base_ref }})
          # Get the actual current HEAD commit after checking out the PR branch
          HEAD_COMMIT=$(git rev-parse HEAD)
          echo "base_commit=$BASE_COMMIT" >> $GITHUB_OUTPUT
          echo "head_commit=$HEAD_COMMIT" >> $GITHUB_OUTPUT
          echo "Base commit: $BASE_COMMIT"
          echo "Head commit: $HEAD_COMMIT"
          
      - name: Collect and consolidate Claude notes
        run: |
          echo "🔍 Collecting Claude notes for PR..."
          if ! bun run .github/scripts/github-synchronize-pr.js --base "${{ steps.commits.outputs.base_commit }}" --head "${{ steps.commits.outputs.head_commit }}"; then
            echo "❌ Failed to collect Claude notes"
            exit 1
          fi
          echo "✅ Successfully collected Claude notes"
          
      - name: Upload Claude notes data as artifact
        if: hashFiles('claude-notes-data.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: claude-notes-pr-${{ github.event.number }}
          path: claude-notes-data.json
          retention-days: 30
          
      - name: Report completion status
        run: |
          if [ -f "claude-notes-data.json" ]; then
            echo "🎉 Claude notes preservation completed successfully"
            echo "📦 Artifact uploaded for PR merge processing"
          else
            echo "ℹ️  No Claude contributions found in this PR"
            echo "✅ Workflow completed successfully (no action needed)"
          fi
          echo "🟢 PR is ready for merge - Claude notes workflow passed"