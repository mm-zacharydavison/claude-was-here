name: claude-was-here Preserve git Notes (Post-merge)

on:
  pull_request:
    types: [closed]

jobs:
  attach-claude-notes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}  # Checkout the target branch
          
      - name: Find and download Claude notes artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Find the most recent workflow run for this PR that created the artifact
          ARTIFACT_NAME="claude-notes-pr-${{ github.event.number }}"
          echo "Looking for artifact: $ARTIFACT_NAME"
          
          # Get the workflow runs for pull_request events on this PR
          WORKFLOW_RUNS=$(gh api repos/${{ github.repository }}/actions/runs \
            --jq '.workflow_runs[] | select(.event == "pull_request" and .head_sha == "${{ github.event.pull_request.head.sha }}") | .id' \
            | head -10)
          
          echo "Found workflow runs: $WORKFLOW_RUNS"
          
          # Try to find and download the artifact from each run
          mkdir -p ./artifacts/
          FOUND=false
          
          for run_id in $WORKFLOW_RUNS; do
            echo "Checking run $run_id for artifacts..."
            
            # Get the artifact ID for this run
            artifact_id=$(gh api repos/${{ github.repository }}/actions/runs/$run_id/artifacts --jq '.artifacts[] | select(.name == "'$ARTIFACT_NAME'") | .id' | head -1)
            
            if [ -n "$artifact_id" ]; then
              echo "Found artifact $artifact_id in run $run_id, downloading..."
              
              # Download the artifact
              if gh api repos/${{ github.repository }}/actions/artifacts/$artifact_id/zip > artifact.zip 2>/dev/null && [ -s artifact.zip ]; then
                unzip -q artifact.zip -d ./artifacts/
                echo "Successfully downloaded and extracted artifact"
                FOUND=true
                break
              else
                echo "Failed to download artifact $artifact_id"
              fi
            else
              echo "No matching artifact found in run $run_id"
            fi
          done
          
          if [ "$FOUND" = "false" ]; then
            echo "No Claude notes artifact found for PR ${{ github.event.number }}"
            echo "This might mean there were no Claude Code contributions in this PR"
          fi
        
      - name: Check if Claude notes exist
        id: check-notes
        run: |
          if [ -f "./artifacts/claude-notes-data.json" ]; then
            echo "notes_exist=true" >> $GITHUB_OUTPUT
            echo "Found Claude notes artifact"
          else
            echo "notes_exist=false" >> $GITHUB_OUTPUT
            echo "No Claude notes artifact found"
          fi
          
      - name: Setup Bun
        if: steps.check-notes.outputs.notes_exist == 'true'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Apply consolidated Claude notes to squashed commit
        if: steps.check-notes.outputs.notes_exist == 'true'
        run: |
          # Get the latest commit (should be the merge/squash commit)
          MERGE_COMMIT=$(git rev-parse HEAD)
          echo "Merge commit: $MERGE_COMMIT"
          
          # Get the base commit to compare against
          BASE_COMMIT=$(git merge-base HEAD origin/${{ github.event.pull_request.base.ref }})
          echo "Base commit: $BASE_COMMIT"
          
          # Use claude-was-here to apply consolidated notes to the squashed commit
          bun run .github/scripts/github-squash-pr.js --data-file "./artifacts/claude-notes-data.json" --base "$BASE_COMMIT" --merge "$MERGE_COMMIT"